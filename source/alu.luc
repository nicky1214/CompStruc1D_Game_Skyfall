module alu (
    input alufn[6],
    input a[16],
    input b[16],
    output alu[16],
    output z,
    output v,
    output n
  ) {
  
  alu_add16 add;
  alu_comp16 comp;
  alu_bool16 bool;
  alu_shift16 shift;

  always {
    add.a = a;
    add.b = b;
    add.alufn = alufn;
    
    comp.z = add.z;
    comp.v = add.v;
    comp.n = add.n;
    comp.alufn = alufn;
    
    bool.a = a;
    bool.b = b;
    bool.alufn = alufn;
    
    shift.a = a;
    shift.b = b[3:0];
    shift.alufn = alufn;
    
    case (alufn[5:4]) {
    
      b00:
      
        alu = add.sum;
        //add
        
      b01:
      
        alu = bool.bool;
        //bool
        
      b10:
      
        alu = shift.shift;
        
      b11:
      
        alu = comp.compare;
        //comp
      
      default:
        
        alu = b0;
        
      }
    
    z = add.z;
    v = add.v;
    n = add.n;
  }
}
