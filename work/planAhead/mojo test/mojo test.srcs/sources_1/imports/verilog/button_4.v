/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module button_4 (
    input clk,
    input rst,
    input leftbutton,
    input rightbutton,
    input resetbutton,
    output reg leftbutton_new,
    output reg rightbutton_new,
    output reg resetbutton_new
  );
  
  
  
  wire [1-1:0] M_edgeleft_out;
  reg [1-1:0] M_edgeleft_in;
  edge_detector_19 edgeleft (
    .clk(clk),
    .in(M_edgeleft_in),
    .out(M_edgeleft_out)
  );
  wire [1-1:0] M_leftbutton_cond_out;
  reg [1-1:0] M_leftbutton_cond_in;
  button_conditioner_36 leftbutton_cond (
    .clk(clk),
    .in(M_leftbutton_cond_in),
    .out(M_leftbutton_cond_out)
  );
  wire [1-1:0] M_edgeright_out;
  reg [1-1:0] M_edgeright_in;
  edge_detector_19 edgeright (
    .clk(clk),
    .in(M_edgeright_in),
    .out(M_edgeright_out)
  );
  wire [1-1:0] M_rightbutton_cond_out;
  reg [1-1:0] M_rightbutton_cond_in;
  button_conditioner_36 rightbutton_cond (
    .clk(clk),
    .in(M_rightbutton_cond_in),
    .out(M_rightbutton_cond_out)
  );
  wire [1-1:0] M_edgereset_out;
  reg [1-1:0] M_edgereset_in;
  edge_detector_19 edgereset (
    .clk(clk),
    .in(M_edgereset_in),
    .out(M_edgereset_out)
  );
  wire [1-1:0] M_resetbutton_cond_out;
  reg [1-1:0] M_resetbutton_cond_in;
  button_conditioner_36 resetbutton_cond (
    .clk(clk),
    .in(M_resetbutton_cond_in),
    .out(M_resetbutton_cond_out)
  );
  
  always @* begin
    M_leftbutton_cond_in = leftbutton;
    M_edgeleft_in = ~M_leftbutton_cond_out;
    if (M_edgeleft_out) begin
      leftbutton_new = 1'h1;
    end else begin
      leftbutton_new = 1'h0;
    end
    M_rightbutton_cond_in = rightbutton;
    M_edgeright_in = ~M_rightbutton_cond_out;
    if (M_edgeright_out) begin
      rightbutton_new = 1'h1;
    end else begin
      rightbutton_new = 1'h0;
    end
    M_resetbutton_cond_in = resetbutton;
    M_edgereset_in = ~M_resetbutton_cond_out;
    if (M_edgereset_out) begin
      resetbutton_new = 1'h1;
    end else begin
      resetbutton_new = 1'h0;
    end
  end
endmodule
